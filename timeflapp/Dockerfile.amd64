FROM debian:buster

WORKDIR /root

# Install various packages

RUN apt-get update && apt-get install -y \
    git \
    cmake \
    apt-transport-https ca-certificates wget dirmngr gnupg software-properties-common \
    maven \
    libglib2.0-dev libdbus-1-dev libudev-dev libical-dev libreadline-dev \
    graphviz \
    doxygen \
    udev \
    systemd \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install and configure JDK

RUN wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | apt-key add -
RUN add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/

RUN apt-get update && apt-get install -y \
    adoptopenjdk-8-hotspot \
    && rm -rf /var/lib/apt/lists/*

RUN update-alternatives --set java /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64/bin/java
RUN update-alternatives --set javac /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64/bin/javac
ENV JAVA_HOME /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64/

# Install BlueZ

RUN apt-get update && apt-get install -y \
    bluez \
    && rm -rf /var/lib/apt/lists/*

RUN wget http://www.kernel.org/pub/linux/bluetooth/bluez-5.47.tar.xz
RUN tar -xf bluez-5.47.tar.xz
WORKDIR /root/bluez-5.47
RUN ./configure --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var
RUN make
RUN make install
RUN /usr/libexec/bluetooth/bluetoothd --version

# Install TinyB

WORKDIR /root
RUN git clone https://github.com/intel-iot-devkit/tinyb.git
WORKDIR /root/tinyb
RUN mkdir build
WORKDIR /root/tinyb/build
RUN cmake -DBUILDJAVA=ON -DCMAKE_INSTALL_PREFIX=/usr ..
RUN make
RUN make install

# Remove buggy libnss-systemd (slows down `service dbus start` by ~90 seconds)

RUN apt-get update && apt-get remove -y \
    libnss-systemd \
    && rm -rf /var/lib/apt/lists/*

# Fetch dependencies

COPY pom.xml /app/pom.xml
WORKDIR /app
RUN mvn dependency:resolve-plugins dependency:go-offline dependency:copy-dependencies

# Build and run application

COPY . /app
RUN mvn compile

ENTRYPOINT [ "./docker-entrypoint.amd64.sh" ]
